Searching 14 files for "_data"

/Users/hackreactor/code/Shugardude/2013-06-web-historian/spec/ServerSpec.js:
   21      async(function(){
   22        expect(res._responseCode).toEqual(200);
   23:       expect(res._data).toMatch(/<input/); // the resulting html should have an input tag
   24        expect(res._ended).toEqual(true);
   25      });
   ..
   32      async(function(){
   33        expect(res._responseCode).toEqual(200);
   34:       expect(res._data).toMatch(/google/); // the resulting html should have the text "google"
   35        expect(res._ended).toEqual(true);
   36      })

/Users/hackreactor/code/Shugardude/2013-06-web-historian/spec/helpers/stubs.js:
   28    this._responseCode = null;
   29    this._headers = null;
   30:   this._data = null;
   31    var self = this;
   32    this.writeHead = function(responseCode, headers) {
   ..
   38      console.log("Response.end called.");
   39      self._ended = true;
   40:     self._data = data;
   41    }
   42  };

4 matches across 2 files


Searching 14 files for "datadir"

/Users/hackreactor/code/Shugardude/2013-06-web-historian/spec/ServerSpec.js:
    1  var handler = require("../web/request-handler");
    2: handler.datadir = __dirname + "/testdata/sites.txt";
    3  var stubs = require("./helpers/stubs");
    4  var res;
    .
   38  
   39    it("Should accept posts to /", function() {
   40:     fs.writeFileSync(handler.datadir, ""); // reset the test file
   41  
   42      var url = "www.example.com";
   ..
   45      handler.handleRequest(req, res);
   46  
   47:     var fileContents = fs.readFileSync(handler.datadir);
   48      expect(res._responseCode).toEqual(302);
   49      expect(fileContents).toEqual(url + "\n");

/Users/hackreactor/code/Shugardude/2013-06-web-historian/web/request-handler.js:
    1  var fs = require('fs');
    2  
    3: exports.datadir = __dirname + "/data/sites.txt"; // tests will need to override this.
    4  
    5  var defaultCorsHeaders = {

4 matches across 2 files
